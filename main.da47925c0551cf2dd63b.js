(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.d({},{hi:()=>oe,MV:()=>re,lH:()=>Z});var n=function(){function e(t){var n=t.renderer,r=t.containerSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(r),this._renderer=n}var n,r;return n=e,(r=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){var n,r,o=this,i=t.popupSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.code&&o.close()},(n="_handleEscClose")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=document.querySelector(i)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close-button"))&&e.close()}))}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(){return a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=c(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},a.apply(this,arguments)}function c(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function l(e,t){if(t&&("object"===i(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}var p=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(r);if(o){var n=f(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return l(this,e)});function c(e){var t,n=e.popupSelector,r=e.popupImageSelector,o=e.imageTitleSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,{popupSelector:n}))._popupPicture=t._popup.querySelector(r),t._pictureTitle=t._popup.querySelector(o),t}return t=c,(n=[{key:"open",value:function(e,t){a(f(c.prototype),"open",this).call(this),this._pictureTitle.textContent=e,this._popupPicture.src=t,this._popupPicture.alt=e}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(o);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=y(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},_.apply(this,arguments)}function y(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function m(e,t){return m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},m(e,t)}function b(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return v(e)}function v(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function u(e){var t,n,r,o,a=e.popupSelector,c=e.selectorsConfig,s=e.formSubmitHandler,l=e.submitButtonText;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),o=function(){return t._userInputData={},t._inputFields.forEach((function(e){t._userInputData[e.name]=e.value})),t._userInputData},(r="_getInputValues")in(n=v(t=i.call(this,{popupSelector:a})))?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,t._submitButtonText=l,t._submitHandler=s,t._form=t._popup.querySelector(c.formSelector),t._confirmationButton=t._popup.querySelector(c.submitButtonSelector),t._inputFields=Array.from(t._popup.querySelectorAll(c.inputSelector)),t}return t=u,(n=[{key:"open",value:function(){_(k(u.prototype),"open",this).call(this),this._confirmationButton.textContent=this._submitButtonText}},{key:"close",value:function(){_(k(u.prototype),"close",this).call(this),this._form.reset()}},{key:"showSavingProgress",value:function(){this._confirmationButton.textContent="Сохранение..."}},{key:"setEventListeners",value:function(){var e=this;_(k(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(){return e._submitHandler(e._getInputValues())}))}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(o);function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}function P(e,t){return P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},P(e,t)}function L(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&P(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function u(e){var t,n=e.popupSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,{popupSelector:n}))._confirmationButton=t._popup.querySelector(".popup__confirm-button"),t}return t=u,(n=[{key:"disableConfirmButton",value:function(){this._confirmationButton.setAttribute("disabled",!0),this._confirmationButton.classList.add("edit-form__submit-button_disabled")}},{key:"showDeletionProgress",value:function(){this._confirmationButton.textContent="Удаление..."}},{key:"_showDefaultButtonText",value:function(){this._confirmationButton.textContent="Да"}},{key:"open",value:function(){C(j(u.prototype),"open",this).call(this),this._showDefaultButtonText(),this._confirmationButton.removeAttribute("disabled"),this._confirmationButton.classList.remove("edit-form__submit-button_disabled")}},{key:"setConfirmationHandler",value:function(e){this._confirmationHandler=e}},{key:"setEventListeners",value:function(){var e=this;C(j(u.prototype),"setEventListeners",this).call(this),this._confirmationButton.addEventListener("click",(function(){return e._confirmationHandler()}))}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(o);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var I=function(){function e(t){var n=t.userNameSelector,r=t.userAboutSelector,o=t.userAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userAbout=document.querySelector(r),this._userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._currentUserData={userName:this._userName.textContent,userAbout:this._userAbout.textContent},this._currentUserData}},{key:"setUserAvatar",value:function(e){this._userAvatar.style.backgroundImage="url(".concat(e,")")}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userAbout.textContent=e.about,this._userAvatar.alt=e.name}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, код ".concat(e.status))})).catch((function(e){return console.error(e)}))}},{key:"updateUserInfo",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.main,about:e.secondary})}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, код ".concat(e.status))})).catch((function(e){return console.error(e)}))}},{key:"updateUserAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, код ".concat(e.status))})).catch((function(e){return console.error(e)}))}},{key:"getUploadedCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, код ".concat(e.status))})).then((function(e){return e.reverse()})).catch((function(e){return console.error(e)}))}},{key:"uploadNewCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.main,link:e.secondary})}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, код ".concat(e.status))})).catch((function(e){return console.error(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, код ".concat(e.status))})).catch((function(e){return console.error(e)}))}},{key:"likeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, код ".concat(e.status))})).catch((function(e){return console.error(e)}))}},{key:"unlikeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject("Произошла ошибка, код ".concat(e.status))})).catch((function(e){return console.error(e)}))}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=document.querySelector(".profile"),A=document.querySelector(".edit-form_type_profile-edit"),U=document.querySelector(".loading-popup"),H=document.querySelector(".profile__avatar"),R=x.querySelector(".profile__edit-button"),D=x.querySelector(".profile__add-button"),N=A.querySelector(".edit-form__input_type_name"),V=A.querySelector(".edit-form__input_type_about"),F={},J={formSelector:".edit-form",inputSelector:".edit-form__input",submitButtonSelector:".edit-form__submit-button",disabledSubmitButtonClass:"edit-form__submit-button_disabled",inputErrorClass:"edit-form__input_type_error"};function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=function(){function e(t){var n=t.selectorsConfig,r=t.formElement;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=r,this._disabledSubmitButtonClass=n.disabledSubmitButtonClass,this._inputFieldErrorClass=n.inputErrorClass,this._submitButton=this._form.querySelector(n.submitButtonSelector),this._inputFields=Array.from(this._form.querySelectorAll(n.inputSelector))}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._toggleSubmitButtonState(),this._inputFields.forEach((function(t){e._hideInputIsInvalid(t)}))}},{key:"enableSubmitButton",value:function(){this._submitButton.removeAttribute("disabled"),this._submitButton.classList.remove(this._disabledSubmitButtonClass)}},{key:"disableSubmitButton",value:function(){this._submitButton.setAttribute("disabled",!0),this._submitButton.classList.add(this._disabledSubmitButtonClass)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleSubmitButtonState(),this._inputFields.forEach((function(t){t.addEventListener("input",(function(){e._showInputValidityState(t),e._toggleSubmitButtonState()}))}))}},{key:"_toggleSubmitButtonState",value:function(){this._hasInvalidInput()?this.disableSubmitButton():this.enableSubmitButton()}},{key:"_showInputValidityState",value:function(e){e.validity.valid?this._hideInputIsInvalid(e):this._showInputIsInvalid(e,e.validationMessage)}},{key:"_showInputIsInvalid",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputFieldErrorClass),n.textContent=t}},{key:"_hideInputIsInvalid",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputFieldErrorClass),t.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputFields.some((function(e){return!e.validity.valid}))}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function G(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var K=function(){function e(t){var n=t.cardData,r=t.cardSelector,o=t.imageClickHandler,i=t.likeHandler,u=t.removeLikeHandler;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardElement=document.querySelector(r),this._cardName=n.name,this._cardPic=n.link,this._cardOwnerId=n.owner._id,this._cardLikes=n.likes,this._imageClickHandler=o,this._likeHandler=i,this._removeLikeHandler=u,this.cardId=n._id}var t,n;return t=e,(n=[{key:"_getCardTemplate",value:function(){return this._cardElement.content.querySelector(".grid-elements__item").cloneNode(!0)}},{key:"_updateLikeCounterState",value:function(e,t){"0"!=e.textContent||t>=1?e.style.display="block":e.style.display="none"}},{key:"_checkIfCardIsLiked",value:function(e){return e.some((function(e){if("08798098c741c1c90dadf44f"===e._id)return!0}))}},{key:"_handleLikeButton",value:function(){var e=this;this._checkIfCardIsLiked(this._cardLikes)?this._removeLikeHandler().then((function(t){return e._cardLikes=t.likes,e._cardLikes})).then((function(t){e._cardLikeCounter.textContent=t.length,e._updateLikeCounterState(e._cardLikeCounter,t.length)})).then((function(){return e._likeButton.classList.remove("card__like-button_active")})).catch((function(e){return console.error(e)})):this._likeHandler().then((function(t){return e._cardLikes=t.likes,e._cardLikes})).then((function(t){e._cardLikeCounter.textContent=t.length,e._updateLikeCounterState(e._cardLikeCounter,t.length)})).then((function(){return e._likeButton.classList.add("card__like-button_active")})).catch((function(e){return console.error(e)}))}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._handleLikeButton(),e._updateLikeCounterState(e._cardLikeCounter)})),this._element.querySelector(".card__delete-button").addEventListener("click",(function(){e._openConfirmationPopup()})),this._cardImage.addEventListener("click",(function(){e._imageClickHandler(e._cardName,e._cardPic)}))}},{key:"removeCard",value:function(){this._element.remove(),this._element=null}},{key:"setTrashIconClickHandler",value:function(e){this._openConfirmationPopup=e}},{key:"createCard",value:function(){return this._element=this._getCardTemplate(),this._cardImage=this._element.querySelector(".card__photo"),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardLikeCounter=this._element.querySelector(".card__like-counter"),"08798098c741c1c90dadf44f"===this._cardOwnerId&&(this._deleteButton.style.display="block"),this._checkIfCardIsLiked(this._cardLikes)&&this._likeButton.classList.add("card__like-button_active"),this._setEventListeners(),this._element.querySelector(".card__name").textContent=this._cardName,this._cardImage.alt=this._cardName,this._cardImage.src=this._cardPic,this._cardLikeCounter.textContent=this._cardLikes.length,this._updateLikeCounterState(this._cardLikeCounter),this._element}}])&&G(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function Q(e,t){Z.open(e,t)}function W(e){var t=function(e){var t=new K({cardData:e,cardSelector:".cards-template",imageClickHandler:Q,likeHandler:function(){return oe.likeCard(e._id)},removeLikeHandler:function(){return oe.unlikeCard(e._id)}});return t.setTrashIconClickHandler((function(){!function(e){re.open(),re.setConfirmationHandler((function(){re.disableConfirmButton(),re.showDeletionProgress(),oe.deleteCard(e.cardId).then((function(){e.removeCard()})).then((function(){return re.close()})).catch((function(e){return console.error(e)}))}))}(t)})),t.createCard()}(e);Y.addItem(t)}var X,Y=new n({renderer:function(e){W(e)},containerSelector:".grid-elements"}),Z=new p({popupSelector:".popup_type_opened-card",popupImageSelector:".popup__photo",imageTitleSelector:".popup__image-title"}),$=new I({userNameSelector:".profile__name",userAboutSelector:".profile__about",userAvatarSelector:".profile__avatar"}),ee=new S({popupSelector:".popup_type_profile-avatar-update",selectorsConfig:J,formSubmitHandler:function(e){F["avatar-updating-form"].disableSubmitButton(),ee.showSavingProgress(),oe.updateUserAvatar(e.secondary).then((function(e){$.setUserAvatar(e.avatar)})).then((function(){return ee.close()})).catch((function(e){return console.error("Произошла ошибка: ".concat(e))}))},submitButtonText:"Сохранить"}),te=new S({popupSelector:".popup_type_profile-edit",selectorsConfig:J,formSubmitHandler:function(e){F["info-editing-form"].disableSubmitButton(),te.showSavingProgress(),oe.updateUserInfo(e).then((function(e){return $.setUserInfo(e)})).then((function(){return te.close()})).catch((function(e){return console.error("Произошла ошибка: ".concat(e))}))},submitButtonText:"Сохранить"}),ne=new S({popupSelector:".popup_type_add-card",selectorsConfig:J,formSubmitHandler:function(e){F["card-adding-form"].disableSubmitButton(),ne.showSavingProgress(),oe.uploadNewCard(e).then((function(e){W(e)})).catch((function(e){return console.error("Произошла ошибка: ".concat(e))})).then((function(){return ne.close()}))},submitButtonText:"Создать"}),re=new E({popupSelector:".popup_type_delete-confirmation"}),oe=new q({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-44",headers:{authorization:"cf0c08f2-8f2d-418f-9eab-35c4104d8607","Content-Type":"application/json"}});oe.getUserInfo().then((function(e){$.setUserAvatar(e.avatar),$.setUserInfo(e)})),Promise.resolve(oe.getUploadedCards()).then((function(e){Y.renderItems(e),U.style.display="none"})).catch((function(e){return console.error("Произошла ошибка: ".concat(e))})),X=J,Array.from(document.querySelectorAll(X.formSelector)).forEach((function(e){var t=new z({selectorsConfig:X,formElement:e}),n=e.getAttribute("name");F[n]=t,t.enableValidation()})),H.addEventListener("click",(function(){ee.open(),F["avatar-updating-form"].resetValidation()})),R.addEventListener("click",(function(){var e=$.getUserInfo(),t=e.userName,n=e.userAbout;N.value=t,V.value=n,F["info-editing-form"].resetValidation(),te.open()})),D.addEventListener("click",(function(){ne.open(),F["card-adding-form"].resetValidation()})),ne.setEventListeners(),ee.setEventListeners(),te.setEventListeners(),Z.setEventListeners(),re.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,